// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rdunif
IntegerVector rdunif(const IntegerVector min, const IntegerVector max);
RcppExport SEXP _pbm_rdunif(SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector >::type min(minSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(rdunif(min, max));
    return rcpp_result_gen;
END_RCPP
}
// ddunif
NumericVector ddunif(const IntegerVector min, const IntegerVector max);
RcppExport SEXP _pbm_ddunif(SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector >::type min(minSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(ddunif(min, max));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pbm_rdunif", (DL_FUNC) &_pbm_rdunif, 2},
    {"_pbm_ddunif", (DL_FUNC) &_pbm_ddunif, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_pbm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
